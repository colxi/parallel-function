const ParallelFunction=(function(){'use strict';if(typeof Worker!=='function'||typeof Blob!=='function'||typeof Promise!=='function'){throw new Error('Aborted: Some of the required APIS are not available (WebWorkers, Blobs,Promises)')}
let g=1;return function(m,n=function(){},a=!1){if(!(this instanceof ParallelFunction))throw new Error('Calling ParallelFunction constructor without new is forbidden');if(typeof m!=='function')throw new Error('First argument must be a function.');if(typeof n!=='function')throw new Error('If Second argument is setted, it must be a function.');const k=function(...l){if(a)return console.log(...l);else return!1};let c=g++;let b;let d=0;let f=[];let h=JSON.stringify(m.toString());let j=new Blob(['('+loader.toString()+')("'+m.name+'",'+h+','+a+');']);let o=URL.createObjectURL(j,{type:'application/javascript; charset=utf-8'});b=new Worker(o);let p=function(...l){if(b===null)throw new Error('This ParallelFunction instance does not exist anymore.');d++;k('[WORKER-'+c+'] >>','#'+d,l);return new Promise(resolve=>{f[d]=resolve;b.postMessage({__parallel_function__:!0,id:d,data:l})})};p.onMessage=n;p.id=c;p.postMessage=function(...l){if(b===null)throw new Error('This ParallelFunction instance does not exist anymore.');return b.postMessage(...l)};p.terminate=function(){if(b===null)return!1;b.terminate();p.postMessage=null;p.id=null;p.onMessage=null;p=null;b=null;f=null;d=null;return!0};p.destroy=p.terminate;function onMessage(m){if(b===null){console.warn('Message recieved, but ParallelFunction instance does not exist anymore. Discarding.');return!1}
const q=m.data;if(typeof q==='object'&&q.hasOwnProperty('__parallel_function__')){k('[WORKER-'+c+'] << #'+q.id,q.data);f[q.id](q.data);return f[q.id]=null}
else return p.onMessage(m)}
b.addEventListener('message',onMessage);m,n,h,j,o=null;return p}})();function loader(r,m){const postMessage=function(o){let q={__parallel_function__:!0,id:o.id||0,data:o.data};self.postMessage(q)};self.addEventListener('message',async function(e){if(!e.data.hasOwnProperty('__parallel_function__'))return;e.stopImmediatePropagation();let q=e.data;let l=Array.isArray(q.data)?q.data:[];let result=await self[r](...l);postMessage({id:q.id,data:result})},!1);r=r?r:'p';self[r]=new Function('return '+m.toString())()}
